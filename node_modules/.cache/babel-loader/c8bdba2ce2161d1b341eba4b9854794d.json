{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rmach\\\\Desktop\\\\primer aplicacion react\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  _s();\n\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) : []; // Establecemos el estado de las tareas.\n\n  const [tareas, cambiarTareas] = useState(tareasGuardadas); // Guardando el estado dentro de localstorage\n\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]); // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n\n  let configMostrarCompletadas = '';\n\n  if (localStorage.getItem('mostrarCompletadas') === null) {\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  } // El estado de mostrarCompletadas\n\n\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mostrarCompletadas: mostrarCompletadas,\n      cambiarMostrarCompletadas: cambiarMostrarCompletadas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormularioTareas, {\n      tareas: tareas,\n      cambiarTareas: cambiarTareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n      tareas: tareas,\n      cambiarTareas: cambiarTareas,\n      mostrarCompletadas: mostrarCompletadas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"E2ohMQ8Q0pJ7p4PMxVYwXvMFYA8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/rmach/Desktop/primer aplicacion react/my-app/src/App.js"],"names":["React","useState","useEffect","Header","FormularioTareas","ListaTareas","App","tareasGuardadas","localStorage","getItem","JSON","parse","tareas","cambiarTareas","setItem","stringify","configMostrarCompletadas","mostrarCompletadas","cambiarMostrarCompletadas","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAMC,eAAe,GACrBC,YAAY,CAACC,OAAb,CAAqB,QAArB,IACAC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADA,GAC6C,EAF7C,CAFgB,CAMhB;;AACA,QAAM,CAACG,MAAD,EAASC,aAAT,IAA0BZ,QAAQ,CAACM,eAAD,CAAxC,CAPgB,CAShB;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeH,MAAf,CAA/B;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT,CAVgB,CAchB;;AACA,MAAII,wBAAwB,GAAG,EAA/B;;AACA,MAAGR,YAAY,CAACC,OAAb,CAAqB,oBAArB,MAA+C,IAAlD,EAAuD;AACrDO,IAAAA,wBAAwB,GAAG,IAA3B;AACD,GAFD,MAEO;AACLA,IAAAA,wBAAwB,GAAGR,YAAY,CAACC,OAAb,CAAqB,oBAArB,MAA+C,MAA1E;AACD,GApBe,CAsBhB;;;AACA,QAAM,CAACQ,kBAAD,EAAqBC,yBAArB,IAAkDjB,QAAQ,CAACe,wBAAD,CAAhE;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACM,OAAb,CAAqB,oBAArB,EAA2CG,kBAAkB,CAACE,QAAnB,EAA3C;AACD,GAFQ,EAEN,CAACF,kBAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,kBAAkB,EAAEA,kBADtB;AAEE,MAAA,yBAAyB,EAAEC;AAF7B;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEN,MAA1B;AAAkC,MAAA,aAAa,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,WAAD;AACE,MAAA,MAAM,EAAED,MADV;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,kBAAkB,EAAEI;AAHtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMX,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? \n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  // Establecemos el estado de las tareas.\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  // Guardando el estado dentro de localstorage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  }\n\n  // El estado de mostrarCompletadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  return (\n    <div className=\"contenedor\">\n      <Header \n        mostrarCompletadas={mostrarCompletadas} \n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas \n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}