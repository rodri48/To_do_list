{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tarea.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a783d946.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = ({ mostrarCompletadas, cambiarMostrarCompletadas }) => {\r\n  const toggleCompletadas = () => {\r\n    cambiarMostrarCompletadas(!mostrarCompletadas);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__titulo\">To do List</h1>\r\n      {mostrarCompletadas ? (\r\n        <button className=\"header__boton\" onClick={() => toggleCompletadas()}>\r\n          Do not show completed\r\n          <FontAwesomeIcon icon={faEyeSlash} className=\"header__icono-boton\" />\r\n        </button>\r\n      ) : (\r\n        <button className=\"header__boton\" onClick={() => toggleCompletadas()}>\r\n          Show completed\r\n          <FontAwesomeIcon icon={faEye} className=\"header__icono-boton\" />\r\n        </button>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FormularioTareas = ({ tareas, cambiarTareas }) => {\r\n  const [inputTarea, cambiarInputTarea] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    cambiarInputTarea(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    cambiarTareas([\r\n      ...tareas,\r\n      {\r\n        id: uuidv4(),\r\n        texto: inputTarea,\r\n        completada: false,\r\n      },\r\n    ]);\r\n    cambiarInputTarea(\"\");\r\n  };\r\n\r\n  return (\r\n    <form action=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"formulario-tareas__input\"\r\n        placeholder=\"Write a task...\"\r\n        value={inputTarea}\r\n        onChange={(e) => handleInput(e)}\r\n      />\r\n      <button type=\"submit\" className=\"formulario-tareas__btn\">\r\n        <FontAwesomeIcon\r\n          icon={faPlusSquare}\r\n          className=\"formulario-tareas__icono-btn\"\r\n        />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormularioTareas;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckSquare,\r\n  faEdit,\r\n  faSquare,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tarea = ({ tarea, toggleCompletada, editarTarea, borrarTarea }) => {\r\n  const [editandoTarea, cambiarEditandoTarea] = useState(false);\r\n  const [nuevaTarea, cambiarNuevaTarea] = useState(tarea.texto);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    editarTarea(tarea.id, nuevaTarea);\r\n    cambiarEditandoTarea(false);\r\n  };\r\n\r\n  return (\r\n    <li className=\"lista-tareas__tarea\">\r\n      <FontAwesomeIcon\r\n        icon={tarea.completada ? faCheckSquare : faSquare}\r\n        className=\"lista-tareas__icono lista-tareas__icono-check\"\r\n        onClick={() => toggleCompletada(tarea.id)}\r\n      />\r\n      <div className=\"lista-tareas__texto\">\r\n        {editandoTarea ? (\r\n          <form\r\n            action=\"\"\r\n            className=\"formulario-editar-tarea\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\"formulario-editar-tarea__input\"\r\n              value={nuevaTarea}\r\n              onChange={(e) => cambiarNuevaTarea(e.target.value)}\r\n            />\r\n            <button type=\"submit\" className=\"formulario-editar-tarea__btn\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          tarea.texto\r\n        )}\r\n      </div>\r\n      <div className=\"lista-tareas__contenedor-botones\">\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n          onClick={() => cambiarEditandoTarea(!editandoTarea)}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n          onClick={() => borrarTarea(tarea.id)}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tarea;\r\n","import React from \"react\";\r\nimport Tarea from \"./Tarea\";\r\n\r\nconst ListaTareas = ({ tareas, cambiarTareas, mostrarCompletadas }) => {\r\n  const toggleCompletada = (id) => {\r\n    cambiarTareas(\r\n      tareas.map((tarea) => {\r\n        if (tarea.id === id) {\r\n          return { ...tarea, completada: !tarea.completada };\r\n        }\r\n        return tarea;\r\n      })\r\n    );\r\n  };\r\n\r\n  const editarTarea = (id, nuevoTexto) => {\r\n    cambiarTareas(\r\n      tareas.map((tarea) => {\r\n        if (tarea.id === id) {\r\n          return { ...tarea, texto: nuevoTexto };\r\n        }\r\n        return tarea;\r\n      })\r\n    );\r\n  };\r\n\r\n  const borrarTarea = (id) => {\r\n    cambiarTareas(\r\n      tareas.filter((tarea) => {\r\n        if (tarea.id !== id) {\r\n          return tarea;\r\n        }\r\n        return;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className=\"lista-tareas\">\r\n      {tareas.length > 0 ? (\r\n        tareas.map((tarea) => {\r\n          if (mostrarCompletadas) {\r\n            return (\r\n              <Tarea\r\n                key={tarea.id}\r\n                tarea={tarea}\r\n                toggleCompletada={toggleCompletada}\r\n                editarTarea={editarTarea}\r\n                borrarTarea={borrarTarea}\r\n              />\r\n            );\r\n            // Si la tarea no esta completada, la devolvemos.\r\n          } else if (!tarea.completada) {\r\n            return (\r\n              <Tarea\r\n                key={tarea.id}\r\n                tarea={tarea}\r\n                toggleCompletada={toggleCompletada}\r\n                editarTarea={editarTarea}\r\n                borrarTarea={borrarTarea}\r\n              />\r\n            );\r\n          }\r\n          // Si ya esta completada no la devolvemos\r\n          return;\r\n        })\r\n      ) : (\r\n        <div className=\"lista-tareas__mensaje\">~ No tasks added ~</div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListaTareas;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? \n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  // Establecemos el estado de las tareas.\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  // Guardando el estado dentro de localstorage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  }\n\n  // El estado de mostrarCompletadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  return (\n    <div className=\"contenedor\">\n      <Header \n        mostrarCompletadas={mostrarCompletadas} \n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas \n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}